version: '3'

#env:
  
tasks:
  up:
    desc: Creates Azure infrastructure and deploys application code
    cmds:
    - terraform -chdir=./infrastructure workspace new {{.REGION}} || true
    - terraform -chdir=./infrastructure workspace select {{.REGION}}
    - terraform -chdir=./infrastructure init
    - task: apply
    vars:
      REGION: '{{default "southcentralus" .CLI_ARGS}}'

  apply: 
    cmds:
    - terraform -chdir=./infrastructure apply -auto-approve -var "region={{.REGION}}"
    - task: creds
    vars:
      REGION: '{{default "southcentralus" .CLI_ARGS}}'
  
  # creds:
  #   desc: Gets credential file for newly created AKS cluster
  #   cmds:
  #   - az aks get-credentials -g {{.RG}} -n {{.AKS}} --overwrite-existing
  #   - kubelogin convert-kubeconfig -l azurecli
  #   vars:
  #     RG: 
  #       sh: terraform -chdir=./infrastructure output -raw APP_RESOURCE_GROUP
  #     AKS: 
  #       sh: terraform -chdir=./infrastructure output -raw AKS_CLUSTER_NAME

  #build:
  #  desc: Builds application code with Docker
  #  cmds:
  #  - docker build -f src/dockerfile src/
  #  vars:

  #deploy:
  #  desc: Deploys application code via helm
  #  cmds:
  #  - helm upgrade -i app deploy/.
  #  vars:

  down:
    desc: Destroys Azure infrastructure and cleans up terraform state files
    cmds:
    - cd infrastructure ;
      rm -rf terraform.tfstate.d .terraform.lock.hcl .terraform terraform.tfstate terraform.tfstate.backup .terraform.tfstate.lock.info
    - az group delete -n {{.RG}} --yes --no-wait || true
    vars:
      RG: 
        sh: terraform -chdir=./infrastructure output -raw APP_RESOURCE_GROUP
