version: '3'

#env:
  
tasks:
  up:
    desc: Creates Azure infrastructure and deploys application code
    cmds:
    - terraform -chdir=./infrastructure workspace new {{.REGION}} || true
    - terraform -chdir=./infrastructure workspace select {{.REGION}}
    - terraform -chdir=./infrastructure init
    - task: apply
    vars:
      REGION: '{{default "southcentralus" .CLI_ARGS}}'

  apply: 
    cmds:
    - terraform -chdir=./infrastructure apply -auto-approve -var "region={{.REGION}}"
    vars:
      REGION: '{{default "southcentralus" .CLI_ARGS}}'

  build:
    desc: Builds application code with Docker
    cmds:
    - az acr login -n {{.ACR_NAME}}
    - az acr build -t sql-job:{{.COMMIT_HASH}} -r {{.ACR_NAME}} src/.
    vars:
      ACR_NAME: 
        sh: terraform -chdir=./infrastructure output -raw ACR_NAME
      COMMIT_HASH:
        sh: git rev-parse HEAD | head -c 8

  deploy: 
    desc: Deploy SQL job app to Container Apps Environment
    cmds:
    - terraform -chdir=./app workspace new {{.APP_NAME}} || true
    - terraform -chdir=./app workspace select {{.APP_NAME}}
    - terraform -chdir=./app init
    - terraform -chdir=./app apply -auto-approve -var "app_name={{.APP_NAME}}"  -var "commit={{.COMMIT_HASH}}"
    vars:
      APP_NAME: 
        sh: terraform -chdir=./infrastructure output -raw APP_NAME
      COMMIT_HASH:
        sh: git rev-parse HEAD | head -c 8

  validate:
    desc: Executes the job and displays the logs
    cmds:
    - az containerapp job start -g {{.RG}} --name {{.APP_NAME}}-sqljob -o table
    - echo "Sleeping for 1 minute…"
    - sleep 60s
    - az containerapp job execution list -g {{.RG}} -n {{.APP_NAME}}-sqljob -o table
    - echo "Sleeping for 5 minutes…"
    - sleep 300s
    - az monitor log-analytics query -w {{.LAW_ID}} --analytics-query "ContainerAppConsoleLogs | where ContainerGroupName startswith '{{.APP_NAME}}-sqljob' | project TimeGenerated, ContainerName, ContainerImage, Log" -o table
    vars:
      RG: 
        sh: terraform -chdir=./infrastructure output -raw RESOURCE_GROUP
      APP_NAME: 
        sh: terraform -chdir=./infrastructure output -raw APP_NAME 
      LAW_ID:
        sh: terraform -chdir=./infrastructure output -raw LAW_ID

  down:
    desc: Destroys all Azure resources and cleans up Terraform
    cmds:
    - az group list --tag Application="Azure Container Apps Job Demo with Azure SQL" --query "[].name" -o tsv | xargs -ot -n 1 az group delete -y --no-wait -n
    - cd ./app; rm -rf terraform.tfstate.d .terraform.lock.hcl .terraform terraform.tfstate terraform.tfstate.backup .terraform.tfstate.lock.info
    - cd ./infrastructure; rm -rf terraform.tfstate.d .terraform.lock.hcl .terraform terraform.tfstate terraform.tfstate.backup .terraform.tfstate.lock.info

